/*
 * To change this license headerSup, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ItemDAO;
import DAO.SupplierDAO;
import DAO.UserDAO;
import DTO.Item;
import DTO.Supplier;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import tablemodel.ItemTableModel;
import tablemodel.SupplierTableModel;

/**
 *
 * @author DELL
 */
public class MainFrame extends javax.swing.JDialog {

    /**
     * Creates new form MainFrame
     */
    LoginForm p;
    SupplierTableModel<Supplier> supModel;
    ItemTableModel<Item> itemModel;
    boolean addNewSup = false, addNewItem = false;
    final int SUCCESS = 1;

    public MainFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        p = (LoginForm) parent;
        if (p.name.isEmpty()) {
            this.dispose();
            p.setVisible(true);

        } else {
            welcome.setText("Welcome " + p.name);
            setUpModel();
            loadData();
        }
    }

    private void setUpModel() {
        lbSupCode.setText("");
        lbSupName.setText("");
        lbAddress.setText("");
        lbSupMsg.setText("");
        chkCollaborating.setSelected(true);
        lbItemCode.setText("");
        lbItemName.setText("");
        lbItemSup.setText("");
        lbPrice.setText("");
        lbUnit.setText("");
        lbItemMsg.setText("");
        chkSupplying.setSelected(true);
        int[] supIndexes = {0, 1, 2};
        String[] supHeader = {"Code", "Name", "Address"};
        supModel = new SupplierTableModel(supHeader, supIndexes);
        this.tblSuppliers.setModel(supModel);
        int[] itemIndexes = {0, 1, 2, 3, 4, 5};
        String[] itemHeader = {"Code", "Name", "Supplier", "Unit", "Price", "Supply"};
        itemModel = new ItemTableModel(itemHeader, itemIndexes);
        this.tblItems.setModel(itemModel);
    }

    private void loadData() {
        try {
            List<Supplier> supList = SupplierDAO.getAllSuppliers();
            for (Supplier sup : supList) {
                supModel.getData().add(sup);
                cbSuppliers.addItem(sup.toString());
            }
            List<Item> itemList = ItemDAO.getAllItems();
            for (Item item : itemList) {
                itemModel.getData().add(item);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Server is closed, cannot load!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcome = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSuppliers = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSupCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSupName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chkCollaborating = new javax.swing.JCheckBox();
        lbSupCode = new javax.swing.JLabel();
        lbSupName = new javax.swing.JLabel();
        lbAddress = new javax.swing.JLabel();
        btnNewSup = new javax.swing.JButton();
        btnSaveSup = new javax.swing.JButton();
        btnDeleteSup = new javax.swing.JButton();
        lbSupMsg = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbSuppliers = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        chkSupplying = new javax.swing.JCheckBox();
        lbItemCode = new javax.swing.JLabel();
        lbItemName = new javax.swing.JLabel();
        lbPrice = new javax.swing.JLabel();
        lbUnit = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        lbItemSup = new javax.swing.JLabel();
        btnNewItem = new javax.swing.JButton();
        btnSaveItem = new javax.swing.JButton();
        btnDeleteItem = new javax.swing.JButton();
        lbItemMsg = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        welcome.setText("jLabel1");

        tblSuppliers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSuppliers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSuppliersMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSuppliersMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSuppliers);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Supplier Details"));

        jLabel1.setText("Code");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        jLabel4.setText("Collaborating");

        lbSupCode.setForeground(new java.awt.Color(255, 0, 0));
        lbSupCode.setText("jLabel11");

        lbSupName.setForeground(new java.awt.Color(255, 0, 0));
        lbSupName.setText("jLabel12");

        lbAddress.setForeground(new java.awt.Color(255, 0, 0));
        lbAddress.setText("jLabel13");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress)
                            .addComponent(txtSupName)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbSupName)
                                    .addComponent(lbAddress)
                                    .addComponent(lbSupCode)
                                    .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 154, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkCollaborating, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(lbSupCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSupName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(17, 17, 17)
                .addComponent(lbAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(chkCollaborating, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnNewSup.setText("Add New");
        btnNewSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewSupActionPerformed(evt);
            }
        });

        btnSaveSup.setText("Save");
        btnSaveSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSupActionPerformed(evt);
            }
        });

        btnDeleteSup.setText("Delete");
        btnDeleteSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSupActionPerformed(evt);
            }
        });

        lbSupMsg.setForeground(new java.awt.Color(0, 0, 255));
        lbSupMsg.setText("jLabel11");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnNewSup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaveSup)
                        .addGap(102, 102, 102)
                        .addComponent(btnDeleteSup)
                        .addGap(45, 45, 45))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbSupMsg)
                .addGap(214, 214, 214))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNewSup)
                            .addComponent(btnSaveSup)
                            .addComponent(btnDeleteSup))))
                .addGap(33, 33, 33)
                .addComponent(lbSupMsg)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Supplier", jPanel1);

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemsMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblItemsMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblItems);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Details"));

        jLabel5.setText("Item Code");

        jLabel6.setText("Item Name");

        jLabel7.setText("Supplier");

        jLabel8.setText("Unit");

        jLabel9.setText("Price");

        jLabel10.setText("Supplying");

        lbItemCode.setForeground(new java.awt.Color(255, 0, 0));
        lbItemCode.setText("jLabel11");

        lbItemName.setForeground(new java.awt.Color(255, 0, 0));
        lbItemName.setText("jLabel12");

        lbPrice.setForeground(new java.awt.Color(255, 0, 0));
        lbPrice.setText("jLabel13");

        lbUnit.setForeground(new java.awt.Color(255, 0, 0));
        lbUnit.setText("jLabel14");

        lbItemSup.setForeground(new java.awt.Color(255, 0, 0));
        lbItemSup.setText("jLabel11");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbItemCode)
                            .addComponent(txtItemName, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbItemName)
                            .addComponent(lbPrice)
                            .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbUnit)
                            .addComponent(chkSupplying)
                            .addComponent(lbItemSup))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(lbItemCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbItemName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbItemSup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbUnit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkSupplying, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnNewItem.setText("Add new");
        btnNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemActionPerformed(evt);
            }
        });

        btnSaveItem.setText("Save");
        btnSaveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveItemActionPerformed(evt);
            }
        });

        btnDeleteItem.setText("Delete");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        lbItemMsg.setForeground(new java.awt.Color(0, 0, 255));
        lbItemMsg.setText("jLabel11");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnNewItem)
                        .addGap(106, 106, 106)
                        .addComponent(btnSaveItem)
                        .addGap(79, 79, 79)
                        .addComponent(btnDeleteItem)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbItemMsg)
                .addGap(216, 216, 216))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSaveItem)
                        .addComponent(btnDeleteItem))
                    .addComponent(btnNewItem))
                .addGap(31, 31, 31)
                .addComponent(lbItemMsg)
                .addGap(41, 41, 41))
        );

        jTabbedPane1.addTab("Item", jPanel3);

        btnLogOut.setText("Log out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(welcome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(welcome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSuppliersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSuppliersMouseClicked
        addNewSup = false;
        lbSupCode.setText("");
        lbSupName.setText("");
        lbAddress.setText("");
        lbSupMsg.setText("");
        int pos = tblSuppliers.getSelectedRow();
        Supplier sup = supModel.getData().get(pos);
        txtSupCode.setText(sup.getSupCode());
        txtSupCode.setEditable(false);
        txtSupName.setText(sup.getSupName());
        txtAddress.setText(sup.getAddress());
        chkCollaborating.setSelected(sup.isCollaborating());
    }//GEN-LAST:event_tblSuppliersMouseClicked

    private void tblSuppliersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSuppliersMouseReleased
        int row = tblSuppliers.getSelectedRow();
        int col = tblSuppliers.getSelectedColumn();
        tblSuppliers.getCellEditor(row, col).cancelCellEditing();
    }//GEN-LAST:event_tblSuppliersMouseReleased

    private void btnNewSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewSupActionPerformed
        addNewSup = true;
        tblSuppliers.getSelectionModel().clearSelection();
        lbSupCode.setText("");
        lbSupName.setText("");
        lbAddress.setText("");
        lbSupMsg.setText("");
        txtSupCode.setText("");
        txtSupCode.setEditable(true);
        txtSupCode.requestFocus();
        txtSupName.setText("");
        txtAddress.setText("");
        chkCollaborating.setSelected(true);
    }//GEN-LAST:event_btnNewSupActionPerformed

    private boolean validSuppiler() {
        boolean check = true, focus = false;
        String code = txtSupCode.getText().trim();
        if (!code.matches(".{1,10}")) {
            lbSupCode.setText("Code cannot be empty or longer than 10 characters!");
            txtSupCode.requestFocus();
            focus = true;
            check = false;
        } else {
            lbSupCode.setText("");
        }
        if (addNewSup) {
            try {
                if (SupplierDAO.searchBySupCode(code) != null) {
                    lbSupCode.setText("Code is duplicated");
                    txtSupCode.requestFocus();
                    if (!focus) {
                        txtSupCode.requestFocus();
                        focus = true;
                    }
                    if (check) {
                        check = false;
                    }
                }
            } catch (SQLException ex) {
                lbSupMsg.setText("Server is closed, cannot modify!");
                lbSupMsg.setForeground(Color.red);
            }
        }
        String name = txtSupName.getText().trim();
        if (!name.matches(".{1,50}")) {
            lbSupName.setText("Name cannot be empty or longer than 50 characters!");
            if (!focus) {
                txtSupName.requestFocus();
                focus = true;
            }
            if (check) {
                check = false;
            }
        } else {
            lbSupName.setText("");
        }
        String address = txtAddress.getText().trim();
        if (!address.matches(".{1,50}")) {
            lbAddress.setText("Address cannot be empty or longer than 50 characters!");
            if (!focus) {
                txtAddress.requestFocus();
            }
            if (check) {
                check = false;
            }
        } else {
            lbAddress.setText("");
        }
        return check;
    }

    private void btnSaveSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSupActionPerformed
        if (!validSuppiler()) {
            return;
        }
        String supCode = txtSupCode.getText().trim();
        String supName = txtSupName.getText().trim();
        String address = txtAddress.getText().trim();
        boolean collab = chkCollaborating.isSelected();
        Supplier supplier = new Supplier(supCode, supName, address, collab);
        if (addNewSup) {
            try {

                int result = SupplierDAO.insertSupplier(supplier);
                if (result == SUCCESS) {
                    supModel.getData().add(supplier);
                    lbSupMsg.setText("Added successfully!");
                    lbSupMsg.setForeground(Color.blue);
                    cbSuppliers.addItem(supplier.toString());
                    addNewSup = false;
                    tblSuppliers.updateUI();
                } else {
                    lbSupMsg.setText("Add failed!");
                    lbSupMsg.setForeground(Color.red);
                }
            } catch (SQLException ex) {
                lbSupMsg.setText("Server is closed, cannot modify!");
                lbSupMsg.setForeground(Color.red);
            }
        } else {
            int pos = tblSuppliers.getSelectedRow();
            if (pos >= 0) {
                try {
                    int result = SupplierDAO.updateSupplier(supplier);
                    if (result == SUCCESS) {
                        supModel.getData().set(pos, supplier);
                        lbSupMsg.setText("Updated successfully!");
                        lbSupMsg.setForeground(Color.blue);
                        cbSuppliers.insertItemAt(supplier.toString(), pos);
                        cbSuppliers.removeItemAt(pos + 1);
                        tblSuppliers.updateUI();
                    } else {
                        lbSupMsg.setText("Update failed!");
                        lbSupMsg.setForeground(Color.red);
                    }
                } catch (SQLException ex) {
                    lbSupMsg.setText("Server is closed, cannot modify!");
                    lbSupMsg.setForeground(Color.red);
                }
            } else {
                lbSupMsg.setText("Please choode a supplier to update!");
                lbSupMsg.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_btnSaveSupActionPerformed

    private void btnDeleteSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSupActionPerformed
        int pos = tblSuppliers.getSelectedRow();
        if (pos >= 0) {
            String supCode = txtSupCode.getText();
            try {
                boolean find = ItemDAO.searchBySupCode(supCode);
                if (find) {
                    lbSupMsg.setText("Supplier is constrained with others items,"
                            + "\nplease delete items from this supplier first");
                    lbSupMsg.setForeground(Color.red);
                } else {
                    int r = JOptionPane.showConfirmDialog(this, "Do you want to delete?",
                            "Delete?", JOptionPane.YES_NO_OPTION);
                    if (r == JOptionPane.YES_OPTION) {
                        int result = SupplierDAO.deleteSupplier(supCode);
                        if (result == SUCCESS) {
                            supModel.getData().remove(pos);
                            btnNewSupActionPerformed(evt);
                            lbSupMsg.setText("Deleted successfully!");
                            lbSupMsg.setForeground(Color.BLUE);
                            cbSuppliers.removeItemAt(pos);
                            tblSuppliers.updateUI();
                        } else {
                            lbSupMsg.setText("Delete failed!");
                            lbSupMsg.setForeground(Color.RED);
                        }
                    }
                }
            } catch (SQLException ex) {
                lbSupMsg.setText("Server is closed, cannot modify!");
                lbSupMsg.setForeground(Color.red);
            }
        } else {
            lbSupMsg.setText("Please choose an supplier to delete!");
            lbSupMsg.setForeground(Color.RED);
        }
    }//GEN-LAST:event_btnDeleteSupActionPerformed

    private void btnNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemActionPerformed
        addNewItem = true;
        tblItems.getSelectionModel().clearSelection();
        lbItemCode.setText("");
        lbItemName.setText("");
        lbItemSup.setText("");
        lbPrice.setText("");
        lbUnit.setText("");
        lbItemMsg.setText("");
        txtItemCode.setText("");
        txtItemCode.setEditable(true);
        txtItemCode.requestFocus();
        txtItemName.setText("");
        cbSuppliers.setSelectedIndex(0);
        txtPrice.setText("");
        txtUnit.setText("");
        chkSupplying.setSelected(true);
    }//GEN-LAST:event_btnNewItemActionPerformed

    private void tblItemsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemsMouseReleased
        int row = tblItems.getSelectedRow();
        int col = tblItems.getSelectedColumn();
        tblItems.getCellEditor(row, col).cancelCellEditing();
    }//GEN-LAST:event_tblItemsMouseReleased

    private int findBySupCode(String supCode) {
        for (int i = 0; i < supModel.getData().size(); i++) {
            if (supCode.equals(supModel.getData().get(i).getSupCode())) {
                return i;
            }
        }
        return -1;
    }
    private void tblItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemsMouseClicked
        addNewItem = false;
        lbItemCode.setText("");
        lbItemName.setText("");
        lbItemSup.setText("");
        lbPrice.setText("");
        lbUnit.setText("");
        lbItemMsg.setText("");
        int pos = tblItems.getSelectedRow();
        Item item = itemModel.getData().get(pos);
        txtItemCode.setText(item.getItemCode());
        txtItemCode.setEditable(false);
        txtItemName.setText(item.getItemName());
        int index = findBySupCode(item.getSupCode());
        if (index >= 0) {
            cbSuppliers.setSelectedIndex(index);
        }
        txtUnit.setText(item.getUnit());
        txtPrice.setText("" + item.getPrice());
        chkSupplying.setSelected(item.isSupplying());
    }//GEN-LAST:event_tblItemsMouseClicked

    private boolean validItem() {
        boolean check = true, focus = false;
        String code = txtItemCode.getText().trim();
        if (!code.matches(".{1,10}")) {
            lbItemCode.setText("Code cannot be empty or longer than 10 characters!");
            txtItemCode.requestFocus();
            focus = true;
            check = false;
        } else {
            lbItemCode.setText("");
        }
        if (addNewItem) {
            try {
                if (ItemDAO.searchByItemCode(code)) {
                    lbItemCode.setText("Code is duplicated!");
                    txtItemCode.requestFocus();
                    if (!focus) {
                        txtItemName.requestFocus();
                        focus = true;
                    }
                    if (check) {
                        check = false;
                    }
                }
            } catch (SQLException e) {
                lbItemMsg.setText("Server is closed, cannot modify!");
                lbItemMsg.setForeground(Color.red);
            }
        }
        String name = txtItemName.getText().trim();
        if (!name.matches(".{1,50}")) {
            lbItemName.setText("Name cannot be empty or longer than 50 characters!");
            if (!focus) {
                txtItemName.requestFocus();
                focus = true;
            }
            if (check) {
                check = false;
            }
        } else {
            lbItemName.setText("");
        }
        try {
            String supplier = cbSuppliers.getSelectedItem().toString();
            lbItemSup.setText("");
        } catch (NullPointerException e) {
            lbItemSup.setText("Please add a supplier!");
            if (!focus) {
                cbSuppliers.requestFocus();
                focus = true;
            }
            if (check) {
                check = false;
            }
        }
        try {
            float price = Float.parseFloat(txtPrice.getText());
            if (price < 1 || price > Float.MAX_VALUE) {
                throw new Exception();
            }
            lbPrice.setText("");
        } catch (NumberFormatException e) {
            lbPrice.setText("Price must be number");
            if (!focus) {
                txtPrice.requestFocus();
                focus = true;
            }
            if (check) {
                check = false;
            }
        } catch (Exception e) {
            lbPrice.setText("Price must > 0 and not too large!");
            if (!focus) {
                txtPrice.requestFocus();
                focus = true;
            }
            if (check) {
                check = false;
            }
        }
        String unit = txtUnit.getText();
        if (!unit.matches(".{1,50}")) {
            lbUnit.setText("Unit cannot be empty or longer than 50 characters!");
            if (!focus) txtUnit.requestFocus();
            if (check) {
                check = false;
            }
        } else {
            lbUnit.setText("");
        }
        return check;
    }

    private void btnSaveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveItemActionPerformed
        if (!validItem()) {
            return;
        }
        String itemCode = txtItemCode.getText().trim();
        String itemName = txtItemName.getText().trim();
        String supplier = (String) cbSuppliers.getSelectedItem();
        String tokens[] = supplier.split("-");
        String supCode = tokens[0].trim();
        float price = Float.parseFloat(txtPrice.getText());
        String unit = txtUnit.getText().trim();
        boolean supplying = chkSupplying.isSelected();
        Item item = new Item(itemCode, itemName, supCode, price, unit, supplying);
        if (addNewItem) {
            try {
                int result = ItemDAO.insertItem(item);
                if (result == SUCCESS) {
                    itemModel.getData().add(item);
                    lbItemMsg.setText("Added successfully");
                    lbItemMsg.setForeground(Color.blue);
                    addNewItem = false;
                    tblItems.updateUI();
                } else {
                    lbItemMsg.setText("Add failed!");
                    lbItemMsg.setForeground(Color.red);
                }
            } catch (SQLException ex) {
                lbItemMsg.setText("Server is closed, cannot modify!");
                lbItemMsg.setForeground(Color.red);
            }
        } else {
            int pos = tblItems.getSelectedRow();
            if (pos >= 0) {
                try {
                    int result = ItemDAO.updateItem(item);
                    if (result == SUCCESS) {
                        itemModel.getData().set(pos, item);
                        lbItemMsg.setText("Updated Successfully!");
                        lbItemMsg.setForeground(Color.blue);
                        tblItems.updateUI();
                    } else {
                        lbItemMsg.setText("Update failed!");
                        lbItemMsg.setForeground(Color.red);
                    }
                } catch (SQLException e) {
                    lbItemMsg.setText("Server is closed, cannot modify!");
                    lbItemMsg.setForeground(Color.red);
                }
            } else {
                lbItemMsg.setText("Please choose an item to update!");
                lbItemMsg.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_btnSaveItemActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        int pos = tblItems.getSelectedRow();
        if (pos >= 0) {
            int r = JOptionPane.showConfirmDialog(this, "Do you want to delete?",
                    "Delete?", JOptionPane.YES_NO_OPTION);
            if (r == JOptionPane.YES_OPTION) {
                String itemCode = txtItemCode.getText();
                try {
                    int result = ItemDAO.deleteItem(itemCode);
                    if (result == SUCCESS) {
                        itemModel.getData().remove(pos);
                        btnNewItemActionPerformed(evt);
                        lbItemMsg.setText("Deleted successfully!");
                        lbItemMsg.setForeground(Color.BLUE);
                        tblItems.updateUI();
                    } else {
                        lbItemMsg.setText("Delete failed!");
                        lbItemMsg.setForeground(Color.RED);
                    }
                } catch (SQLException e) {
                    lbItemMsg.setText("Server is closed, cannot modify!");
                    lbItemMsg.setForeground(Color.red);
                }
            }
        } else {
            lbItemMsg.setText("Please choose an item to delete!");
            lbItemMsg.setForeground(Color.RED);
        }
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        try {
            int result = UserDAO.updateStatus(p.id, false);
            if (result == SUCCESS) {
                this.dispose();
                p.name = "";
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Server is closed, cannot log out!");
        }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            int result = UserDAO.updateStatus(p.id, false);
            if (result == SUCCESS) {
                this.dispose();
                p.name = "";
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Server is closed, cannot log out!");
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame dialog = new MainFrame(new LoginForm(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnDeleteSup;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNewItem;
    private javax.swing.JButton btnNewSup;
    private javax.swing.JButton btnSaveItem;
    private javax.swing.JButton btnSaveSup;
    private javax.swing.JComboBox<String> cbSuppliers;
    private javax.swing.JCheckBox chkCollaborating;
    private javax.swing.JCheckBox chkSupplying;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JLabel lbItemCode;
    private javax.swing.JLabel lbItemMsg;
    private javax.swing.JLabel lbItemName;
    private javax.swing.JLabel lbItemSup;
    private javax.swing.JLabel lbPrice;
    private javax.swing.JLabel lbSupCode;
    private javax.swing.JLabel lbSupMsg;
    private javax.swing.JLabel lbSupName;
    private javax.swing.JLabel lbUnit;
    private javax.swing.JTable tblItems;
    private javax.swing.JTable tblSuppliers;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSupCode;
    private javax.swing.JTextField txtSupName;
    private javax.swing.JTextField txtUnit;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
